/*
 * Collection Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using product-list.Model;
using product-list.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace product-list.Test.Model
{
    /// <summary>
    ///  Class for testing ProductlistProductListEntity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProductlistProductListEntityTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProductlistProductListEntity
        //private ProductlistProductListEntity instance;

        public ProductlistProductListEntityTests()
        {
            // TODO uncomment below to create an instance of ProductlistProductListEntity
            //instance = new ProductlistProductListEntity();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductlistProductListEntity
        /// </summary>
        [Fact]
        public void ProductlistProductListEntityInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProductlistProductListEntity
            //Assert.IsType<ProductlistProductListEntity>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }

        /// <summary>
        /// Test the property 'UrlKey'
        /// </summary>
        [Fact]
        public void UrlKeyTest()
        {
            // TODO unit test for the property 'UrlKey'
        }

        /// <summary>
        /// Test the property 'EntityType'
        /// </summary>
        [Fact]
        public void EntityTypeTest()
        {
            // TODO unit test for the property 'EntityType'
        }

        /// <summary>
        /// Test the property 'EntityCode'
        /// </summary>
        [Fact]
        public void EntityCodeTest()
        {
            // TODO unit test for the property 'EntityCode'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }

        /// <summary>
        /// Test the property 'CountAssociations'
        /// </summary>
        [Fact]
        public void CountAssociationsTest()
        {
            // TODO unit test for the property 'CountAssociations'
        }
    }
}
